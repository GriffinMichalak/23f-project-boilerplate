Load environment configuration
Waiting for RTS to start ...
{"success":true}RTS started.
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@108c4c35]
SLF4J: Found provider [org.slf4j.reload4j.Reload4jServiceProvider@4ccabbaa]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [ch.qos.logback.classic.spi.LogbackServiceProvider@108c4c35]
[2023-12-04 17:47:00,514]  - Starting ServerApplication vv1.9.49 using Java 17.0.9 with PID 1893 (/opt/appsmith/backend/server.jar started by root in /opt/appsmith/backend)
[2023-12-04 17:47:00,515]  - Running with Spring Boot v3.0.9, Spring v6.0.11
[2023-12-04 17:47:00,516]  - The following 1 profile is active: "production"
[2023-12-04 17:47:01,681]  - Multiple Spring Data modules found, entering strict repository configuration mode
[2023-12-04 17:47:01,682]  - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
[2023-12-04 17:47:01,946]  - Finished Spring Data repository scanning in 259 ms. Found 58 Reactive MongoDB repository interfaces.
[2023-12-04 17:47:04,031]  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.8.2"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "6.4.16-linuxkit"}, "platform": "Java/Eclipse Adoptium/17.0.9+9"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='appsmith', source='appsmith', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3bae64d0, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@23202c31], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8b91134]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3157e4c0], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
[2023-12-04 17:47:04,165]  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59546000, setName='mr1', canonicalAddress=localhost:27017, hosts=[localhost:27017], passives=[], arbiters=[], primary='localhost:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000002, setVersion=1, topologyVersion=TopologyVersion{processId=656e10927b748c07fea42cf5, counter=6}, lastWriteDate=Mon Dec 04 17:46:59 UTC 2023, lastUpdateTimeNanos=44535390103}
[2023-12-04 17:47:05,184]  - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.8.2"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "6.4.16-linuxkit"}, "platform": "Java/Eclipse Adoptium/17.0.9+9"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='appsmith', source='appsmith', password=<hidden>, mechanismProperties=<hidden>}, streamFactoryFactory=NettyStreamFactoryFactory{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@772caabe, socketChannelClass=class io.netty.channel.socket.nio.NioSocketChannel, allocator=PooledByteBufAllocator(directByDefault: true), sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@23202c31], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8b91134]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@3157e4c0], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
[2023-12-04 17:47:05,191]  - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=8830209, setName='mr1', canonicalAddress=localhost:27017, hosts=[localhost:27017], passives=[], arbiters=[], primary='localhost:27017', tagSet=TagSet{[]}, electionId=7fffffff0000000000000002, setVersion=1, topologyVersion=TopologyVersion{processId=656e10927b748c07fea42cf5, counter=6}, lastWriteDate=Mon Dec 04 17:46:59 UTC 2023, lastUpdateTimeNanos=45568402187}
[2023-12-04 17:47:05,762]  - Enabled plugins: []
[2023-12-04 17:47:05,763]  - Disabled plugins: []
[2023-12-04 17:47:05,767]  - PF4J version 3.10.0 in 'deployment' mode
[2023-12-04 17:47:05,888]  - Plugin 'saas-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'postgres-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'snowflake-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'elasticsearch-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'mssql-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'redshift-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'google-sheets-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'mongo-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'graphql-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'js-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'smtp-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'oracle-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'amazons3-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'mysql-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'openai-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'dynamo-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'arangodb-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'restapi-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'redis-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Plugin 'firestore-plugin@1.0-SNAPSHOT' resolved
[2023-12-04 17:47:05,888]  - Start plugin 'saas-plugin@1.0-SNAPSHOT'
[2023-12-04 17:47:05,890]  - Start plugin 'postgres-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:05,900]  - Start plugin 'snowflake-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:05,914]  - Start plugin 'elasticsearch-plugin@1.0-SNAPSHOT'
[2023-12-04 17:47:05,916]  - Start plugin 'mssql-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:05,924]  - Start plugin 'redshift-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:05,935]  - Start plugin 'google-sheets-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:05,989]  - Start plugin 'mongo-plugin@1.0-SNAPSHOT'
[2023-12-04 17:47:05,993]  - Start plugin 'graphql-plugin@1.0-SNAPSHOT'
[2023-12-04 17:47:05,993]  - Start plugin 'js-plugin@1.0-SNAPSHOT'
[2023-12-04 17:47:05,994]  - Start plugin 'smtp-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,000]  - Start plugin 'oracle-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,008]  - Start plugin 'amazons3-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,016]  - Start plugin 'mysql-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,022]  - Start plugin 'openai-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,028]  - Start plugin 'dynamo-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,038]  - Start plugin 'arangodb-plugin@1.0-SNAPSHOT'
[2023-12-04 17:47:06,039]  - Start plugin 'restapi-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,046]  - Start plugin 'redis-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:06,052]  - Start plugin 'firestore-plugin@1.0-SNAPSHOT'
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: ch.qos.logback.classic.spi.LogbackServiceProvider not a subtype
SLF4J: A SLF4J service provider failed to instantiate:
org.slf4j.spi.SLF4JServiceProvider: org.slf4j.reload4j.Reload4jServiceProvider not a subtype
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
[2023-12-04 17:47:07,732]  - Autowired annotation is not supported on static fields: public static final int com.appsmith.server.helpers.GitFileUtils.INDEX_LOCK_FILE_STALE_TIME
[2023-12-04 17:47:08,220]  - Mongock runner COMMUNITY version[5.1.6]
[2023-12-04 17:47:08,220]  - Running Mongock with NO metadata
[2023-12-04 17:47:08,220]  - Property transaction-enabled not provided. It will become true as default in next versions. Set explicit value to false in case transaction are not desired.
[2023-12-04 17:47:08,220]  - Property transaction-enabled not provided and is unknown if driver is transactionable. BY DEFAULT MONGOCK WILL RUN IN NO-TRANSACTION MODE.
[2023-12-04 17:47:08,295]  - Reflections took 58 ms to scan 1 urls, producing 5 keys and 42 values
[2023-12-04 17:47:08,323]  - Reflections took 12 ms to scan 1 urls, producing 5 keys and 42 values
[2023-12-04 17:47:08,528]  - Mongock trying to acquire the lock
[2023-12-04 17:47:08,545]  - Mongock acquired the lock until: Mon Dec 04 17:48:08 UTC 2023
[2023-12-04 17:47:08,545]  - Starting mongock lock daemon...
[2023-12-04 17:47:08,547]  - Mongock starting the data migration sequence id[2023-12-04T17:47:08.218021007-496]...
[2023-12-04 17:47:08,593]  - method[initializeSchemaVersion] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:08,693]  - APPLIED - {"id"="initialize-schema-version", "type"="execution", "author"="", "class"="DatabaseChangelog0", "method"="initializeSchemaVersion"}
[2023-12-04 17:47:08,699]  - method[initialPlugins] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:08,727]  - APPLIED - {"id"="initial-plugins", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="initialPlugins"}
[2023-12-04 17:47:08,731]  - method[removeOrgNameIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:08,739]  - APPLIED - {"id"="remove-org-name-index", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="removeOrgNameIndex"}
[2023-12-04 17:47:08,743]  - method[addInitialIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,464]  - APPLIED - {"id"="initial-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addInitialIndexes"}
[2023-12-04 17:47:09,467]  - method[addApplicationDeletedAtFieldAndIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,484]  - APPLIED - {"id"="application-deleted-at", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addApplicationDeletedAtFieldAndIndex"}
[2023-12-04 17:47:09,487]  - method[hideRapidApiPluginFromCreateDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,508]  - APPLIED - {"id"="hide-rapidapi-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="hideRapidApiPluginFromCreateDatasource"}
[2023-12-04 17:47:09,510]  - method[addDatasourceDeletedAtFieldAndIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,522]  - APPLIED - {"id"="datasource-deleted-at", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addDatasourceDeletedAtFieldAndIndex"}
[2023-12-04 17:47:09,524]  - method[addPageDeletedAtFieldAndIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,537]  - APPLIED - {"id"="page-deleted-at", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addPageDeletedAtFieldAndIndex"}
[2023-12-04 17:47:09,541]  - method[setFriendlyPluginNames] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,558]  - APPLIED - {"id"="friendly-plugin-names", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setFriendlyPluginNames"}
[2023-12-04 17:47:09,560]  - method[addDeleteDatasourcePermToExistingGroups] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,562]  - APPLIED - {"id"="add-delete-datasource-perm-existing-groups", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addDeleteDatasourcePermToExistingGroups"}
[2023-12-04 17:47:09,565]  - method[installDefaultPluginsToAllOrganizations] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,575]  - APPLIED - {"id"="install-default-plugins-to-all-organizations", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="installDefaultPluginsToAllOrganizations"}
[2023-12-04 17:47:09,578]  - method[ensureDatasourceCreatedAndUpdatedAt] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,584]  - APPLIED - {"id"="ensure-datasource-created-and-updated-at-fields", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="ensureDatasourceCreatedAndUpdatedAt"}
[2023-12-04 17:47:09,587]  - method[addIndexForSequenceName] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,613]  - APPLIED - {"id"="add-index-for-sequence-name", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addIndexForSequenceName"}
[2023-12-04 17:47:09,617]  - method[setInitialSequenceForDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,631]  - APPLIED - {"id"="set-initial-sequence-for-datasource", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setInitialSequenceForDatasource"}
[2023-12-04 17:47:09,635]  - method[setPluginImageAndDocsLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,658]  - APPLIED - {"id"="set-plugin-image-and-docs-link", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setPluginImageAndDocsLink"}
[2023-12-04 17:47:09,660]  - method[fixDoubleEscapes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,663]  - APPLIED - {"id"="fix-double-escapes", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="fixDoubleEscapes"}
[2023-12-04 17:47:09,670]  - method[encryptPassword] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.external.services.EncryptionService]
[2023-12-04 17:47:09,673]  - APPLIED - {"id"="encrypt-password", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="encryptPassword"}
[2023-12-04 17:47:09,677]  - method[mysqlPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,692]  - APPLIED - {"id"="install-mysql-plugins", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="mysqlPlugin"}
[2023-12-04 17:47:09,694]  - method[updateDatabaseDocumentationLinks] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,705]  - APPLIED - {"id"="update-database-documentation-links", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateDatabaseDocumentationLinks"}
[2023-12-04 17:47:09,708]  - method[giveExecutePermissionToReadActionUsers] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,710]  - APPLIED - {"id"="execute-action-for-read-action", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="giveExecutePermissionToReadActionUsers"}
[2023-12-04 17:47:09,712]  - method[giveInvitePermissionToOrganizationsAndPublicPermissionsToApplications] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,714]  - APPLIED - {"id"="invite-and-public-permissions", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="giveInvitePermissionToOrganizationsAndPublicPermissionsToApplications"}
[2023-12-04 17:47:09,719]  - method[generateUniqueIdForInstance] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,752]  - APPLIED - {"id"="generate-unique-id-for-instance", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="generateUniqueIdForInstance"}
[2023-12-04 17:47:09,758]  - method[fixTokenExpiration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,779]  - APPLIED - {"id"="fix-password-reset-token-expiration", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="fixTokenExpiration"}
[2023-12-04 17:47:09,782]  - method[addElasticSearchPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,787]  - APPLIED - {"id"="add-elastic-search-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addElasticSearchPlugin"}
[2023-12-04 17:47:09,790]  - method[addDynamoPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,795]  - APPLIED - {"id"="add-dynamo-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addDynamoPlugin"}
[2023-12-04 17:47:09,798]  - method[usePngLogos] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,807]  - APPLIED - {"id"="use-png-logos", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="usePngLogos"}
[2023-12-04 17:47:09,810]  - method[addRedisPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,816]  - APPLIED - {"id"="add-redis-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addRedisPlugin"}
[2023-12-04 17:47:09,819]  - method[addMsSqlPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,826]  - APPLIED - {"id"="add-msSql-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addMsSqlPlugin"}
[2023-12-04 17:47:09,829]  - method[addNewPageIndexAfterDroppingNewPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,849]  - APPLIED - {"id"="createNewPageIndexAfterDroppingNewPage", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewPageIndexAfterDroppingNewPage"}
[2023-12-04 17:47:09,852]  - method[addNewActionIndexAfterDroppingNewAction] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,867]  - APPLIED - {"id"="createNewActionIndexAfterDroppingNewAction", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewActionIndexAfterDroppingNewAction"}
[2023-12-04 17:47:09,870]  - method[migratePage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,873]  - APPLIED - {"id"="migrate-page-and-actions", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migratePage"}
[2023-12-04 17:47:09,875]  - method[addNewPageAndNewActionNewIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,899]  - APPLIED - {"id"="new-page-new-action-add-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewPageAndNewActionNewIndexes"}
[2023-12-04 17:47:09,903]  - method[addNewActionIndexForPageId] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,908]  - APPLIED - {"id"="new-action-add-index-pageId", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addNewActionIndexForPageId"}
[2023-12-04 17:47:09,911]  - method[updateActionIndexToSingleMultipleIndices] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,940]  - APPLIED - {"id"="update-action-index-to-single-multiple-indices", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateActionIndexToSingleMultipleIndices"}
[2023-12-04 17:47:09,943]  - method[addFirestorePlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,949]  - APPLIED - {"id"="add-firestore-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addFirestorePlugin"}
[2023-12-04 17:47:09,951]  - method[ensureAppIconsAndColors] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,956]  - APPLIED - {"id"="ensure-app-icons-and-colors", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="ensureAppIconsAndColors"}
[2023-12-04 17:47:09,958]  - method[updateAuthenticationTypes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,963]  - APPLIED - {"id"="update-authentication-type", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateAuthenticationTypes"}
[2023-12-04 17:47:09,965]  - method[addIsSendSessionEnabledPropertyInDatasources] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,968]  - APPLIED - {"id"="add-isSendSessionEnabled-key-for-datasources", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addIsSendSessionEnabledPropertyInDatasources"}
[2023-12-04 17:47:09,970]  - method[addRedshiftPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,975]  - APPLIED - {"id"="add-redshift-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addRedshiftPlugin"}
[2023-12-04 17:47:09,977]  - method[clearUserDataCollection] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:09,980]  - APPLIED - {"id"="clear-userdata-collection", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="clearUserDataCollection"}
[2023-12-04 17:47:09,983]  - method[updateDatabaseDocumentationLinks_v1_2_1] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,004]  - APPLIED - {"id"="update-database-documentation-links-v1-2-1", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateDatabaseDocumentationLinks_v1_2_1"}
[2023-12-04 17:47:10,007]  - method[addAmazonS3Plugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,012]  - APPLIED - {"id"="add-amazons3-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addAmazonS3Plugin"}
[2023-12-04 17:47:10,014]  - method[addAppViewerInvitePolicy] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,017]  - APPLIED - {"id"="add-app-viewer-invite-policy", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addAppViewerInvitePolicy"}
[2023-12-04 17:47:10,019]  - method[updatePluginDatasourceFormComponents] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,060]  - APPLIED - {"id"="update-plugin-datasource-form-components", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updatePluginDatasourceFormComponents"}
[2023-12-04 17:47:10,063]  - method[updateEncodeParamsToggle] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,065]  - APPLIED - {"id"="update-database-encode-params-toggle", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateEncodeParamsToggle"}
[2023-12-04 17:47:10,068]  - method[updatePostgresActionsSetPreparedStatementConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,083]  - APPLIED - {"id"="update-postgres-plugin-preparedStatement-config", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updatePostgresActionsSetPreparedStatementConfiguration"}
[2023-12-04 17:47:10,085]  - method[fixDynamicBindingPathListForExistingActions] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,087]  - APPLIED - {"id"="fix-dynamicBindingPathListForActions", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="fixDynamicBindingPathListForExistingActions"}
[2023-12-04 17:47:10,089]  - method[updateActionConfigurationTimeout] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,090]  - APPLIED - {"id"="update-database-action-configuration-timeout", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateActionConfigurationTimeout"}
[2023-12-04 17:47:10,093]  - method[updateS3DatasourceConfigurationAndLabel] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,100]  - APPLIED - {"id"="update-s3-datasource-configuration-and-label", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateS3DatasourceConfigurationAndLabel"}
[2023-12-04 17:47:10,106]  - method[changeAppLayoutTypeDefinition] with arguments: [org.springframework.data.mongodb.core.MongoOperations]
[2023-12-04 17:47:10,110]  - Could not map 'Application.appLayout'; Maybe a fragment in 'AppLayout' is considered a simple type; Mapper continues with appLayout
[2023-12-04 17:47:10,112]  - Could not map 'Application.appLayout'; Maybe a fragment in 'AppLayout' is considered a simple type; Mapper continues with appLayout
[2023-12-04 17:47:10,117]  - APPLIED - {"id"="change-applayout-type-definition", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="changeAppLayoutTypeDefinition"}
[2023-12-04 17:47:10,120]  - method[updateMysqlPostgresMongoSslMode] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,127]  - APPLIED - {"id"="update-mysql-postgres-mongo-ssl-mode", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateMysqlPostgresMongoSslMode"}
[2023-12-04 17:47:10,130]  - method[addCommentingPermissions] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,132]  - APPLIED - {"id"="add-commenting-permissions", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addCommentingPermissions"}
[2023-12-04 17:47:10,136]  - method[addGoogleSheetsPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,143]  - APPLIED - {"id"="add-google-sheets-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addGoogleSheetsPlugin"}
[2023-12-04 17:47:10,146]  - method[markInstanceAsUnregistered] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,149]  - APPLIED - {"id"="mark-instance-unregistered", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="markInstanceAsUnregistered"}
[2023-12-04 17:47:10,152]  - method[createEntryInSequencePerOrganizationForDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,154]  - APPLIED - {"id"="create-entry-in-sequence-per-organization-for-datasource", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createEntryInSequencePerOrganizationForDatasource"}
[2023-12-04 17:47:10,157]  - method[migrateSmartSubstitutionDataTypeBoolean] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, org.springframework.data.mongodb.core.MongoOperations]
[2023-12-04 17:47:10,176]  - APPLIED - {"id"="migrate-smartSubstitution-dataType", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateSmartSubstitutionDataTypeBoolean"}
[2023-12-04 17:47:10,178]  - method[updateMongoImportFromSrvField] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,182]  - APPLIED - {"id"="update-mongo-import-from-srv-field", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateMongoImportFromSrvField"}
[2023-12-04 17:47:10,185]  - method[deleteMongoDatasourceStructures] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, org.springframework.data.mongodb.core.MongoOperations]
[2023-12-04 17:47:10,189]  - APPLIED - {"id"="delete-mongo-datasource-structures", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="deleteMongoDatasourceStructures"}
[2023-12-04 17:47:10,197]  - method[setMongoActionInputToRaw] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,201]  - APPLIED - {"id"="set-mongo-actions-type-to-raw", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setMongoActionInputToRaw"}
[2023-12-04 17:47:10,202]  - method[updateFirestoreWhereConditionsData] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,207]  - APPLIED - {"id"="update-firestore-where-conditions-data", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateFirestoreWhereConditionsData"}
[2023-12-04 17:47:10,209]  - method[addApplicationExportPermissions] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,211]  - APPLIED - {"id"="add-application-export-permissions", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addApplicationExportPermissions"}
[2023-12-04 17:47:10,213]  - method[addSnowflakePlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,218]  - APPLIED - {"id"="add-snowflake-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addSnowflakePlugin"}
[2023-12-04 17:47:10,221]  - method[migrateUpdateOneToUpdateManyMongoFormCommand] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,224]  - APPLIED - {"id"="mongo-form-merge-update-commands", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateUpdateOneToUpdateManyMongoFormCommand"}
[2023-12-04 17:47:10,226]  - method[ensureUserCreatedAndUpdatedAt] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,229]  - APPLIED - {"id"="ensure-user-created-and-updated-at-fields", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="ensureUserCreatedAndUpdatedAt"}
[2023-12-04 17:47:10,232]  - method[addOrderToAllPagesOfApplication] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,233]  - APPLIED - {"id"="add-and-update-order-for-all-pages", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addOrderToAllPagesOfApplication"}
[2023-12-04 17:47:10,235]  - method[migrateRawInputTypeToRawCommand] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,239]  - APPLIED - {"id"="mongo-form-migrate-raw", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateRawInputTypeToRawCommand"}
[2023-12-04 17:47:10,241]  - method[addArangoDBPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,245]  - APPLIED - {"id"="add-arangodb-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addArangoDBPlugin"}
[2023-12-04 17:47:10,248]  - method[setSvgLogoToPluginIcons] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,280]  - APPLIED - {"id"="set-svg-logo-to-plugins", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setSvgLogoToPluginIcons"}
[2023-12-04 17:47:10,282]  - method[removePageOrderFieldFromApplicationPages] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,287]  - APPLIED - {"id"="remove-order-field-from-application- pages", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="removePageOrderFieldFromApplicationPages"}
[2023-12-04 17:47:10,289]  - method[createPluginReferenceForGenerateCRUDPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,321]  - APPLIED - {"id"="create-plugin-reference-for-genarate-CRUD-page", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createPluginReferenceForGenerateCRUDPage"}
[2023-12-04 17:47:10,323]  - method[encryptCertificateAndPassword] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.external.services.EncryptionService]
[2023-12-04 17:47:10,326]  - APPLIED - {"id"="encrypt-certificate", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="encryptCertificateAndPassword"}
[2023-12-04 17:47:10,328]  - method[createPluginReferenceForS3AndGSheetGenerateCRUDPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,351]  - APPLIED - {"id"="create-plugin-reference-for-S3-GSheet-genarate-CRUD-page", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createPluginReferenceForS3AndGSheetGenerateCRUDPage"}
[2023-12-04 17:47:10,353]  - method[addApplicationGitMetadataFieldAndIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,361]  - APPLIED - {"id"="application-git-metadata", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addApplicationGitMetadataFieldAndIndex"}
[2023-12-04 17:47:10,363]  - method[addJSPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,367]  - APPLIED - {"id"="add-js-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addJSPlugin"}
[2023-12-04 17:47:10,369]  - method[updateGoogleSheetActionsSetSmartSubstitutionConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,377]  - APPLIED - {"id"="update-google-sheet-plugin-smartSubstitution-config", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateGoogleSheetActionsSetSmartSubstitutionConfiguration"}
[2023-12-04 17:47:10,379]  - method[uninstallMongoUqiPluginAndRemoveAllActions] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,386]  - APPLIED - {"id"="uninstall-mongo-uqi-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="uninstallMongoUqiPluginAndRemoveAllActions"}
[2023-12-04 17:47:10,388]  - method[migrateMongoPluginToUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,393]  - APPLIED - {"id"="migrate-mongo-to-uqi", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateMongoPluginToUqi"}
[2023-12-04 17:47:10,395]  - method[migrateMongoPluginDynamicBindingListUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,397]  - APPLIED - {"id"="migrate-mongo-uqi-dynamicBindingPathList", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateMongoPluginDynamicBindingListUqi"}
[2023-12-04 17:47:10,399]  - method[updatePluginPackageNameIndexToPluginNamePackageNameAndVersion] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,511]  - APPLIED - {"id"="update-plugin-package-name-index", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updatePluginPackageNameIndexToPluginNamePackageNameAndVersion"}
[2023-12-04 17:47:10,514]  - method[deleteOrphanActions] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,516]  - APPLIED - {"id"="delete-orphan-actions", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="deleteOrphanActions"}
[2023-12-04 17:47:10,518]  - method[migrateOldAppColorsToNewColors] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,559]  - APPLIED - {"id"="migrate-old-app-color-to-new-colors", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateOldAppColorsToNewColors"}
[2023-12-04 17:47:10,561]  - method[updateS3PermanentUrlToggleDefaultValue] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,565]  - APPLIED - {"id"="update-s3-permanent-url-toggle-default-value", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateS3PermanentUrlToggleDefaultValue"}
[2023-12-04 17:47:10,567]  - method[updateGitApplicationMetadataIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,579]  - APPLIED - {"id"="application-git-metadata-index", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateGitApplicationMetadataIndex"}
[2023-12-04 17:47:10,581]  - method[migrateS3PluginToUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,586]  - APPLIED - {"id"="migrate-s3-to-uqi", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateS3PluginToUqi"}
[2023-12-04 17:47:10,588]  - method[setSlugToApplicationAndPage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,592]  - APPLIED - {"id"="set-slug-to-application-and-page", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setSlugToApplicationAndPage"}
[2023-12-04 17:47:10,595]  - method[removeUnusedTriggerPathsListWidget] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,597]  - APPLIED - {"id"="update-list-widget-trigger-paths", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="removeUnusedTriggerPathsListWidget"}
[2023-12-04 17:47:10,599]  - method[updateS3ActionConfigurationBodyForContentTypeSupport] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,601]  - APPLIED - {"id"="update-s3-action-configuration-for-type", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateS3ActionConfigurationBodyForContentTypeSupport"}
[2023-12-04 17:47:10,603]  - method[fixIsPublicIsSetFalseWhenAppIsPublic] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,606]  - APPLIED - {"id"="fix-ispublic-is-false-for-public-apps", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="fixIsPublicIsSetFalseWhenAppIsPublic"}
[2023-12-04 17:47:10,608]  - method[updateJsActionsClientSideExecution] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,611]  - APPLIED - {"id"="update-js-action-client-side-execution", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateJsActionsClientSideExecution"}
[2023-12-04 17:47:10,613]  - method[addSmtpPluginPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,619]  - APPLIED - {"id"="add-smtp-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addSmtpPluginPlugin"}
[2023-12-04 17:47:10,622]  - method[updateMockdbEndpoint] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,625]  - APPLIED - {"id"="update-mockdb-endpoint", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateMockdbEndpoint"}
[2023-12-04 17:47:10,627]  - method[addPluginNameForGoogleSheets] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,632]  - APPLIED - {"id"="add-google-sheets-plugin-name", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addPluginNameForGoogleSheets"}
[2023-12-04 17:47:10,634]  - method[insertDefaultResources] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,643]  - APPLIED - {"id"="insert-default-resources", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="insertDefaultResources"}
[2023-12-04 17:47:10,647]  - method[clearRedisCache] with arguments: [org.springframework.data.redis.core.ReactiveRedisOperations]
[2023-12-04 17:47:10,701]  - APPLIED - {"id"="flush-spring-redis-keys", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="clearRedisCache"}
[2023-12-04 17:47:10,703]  - method[migrateFirestorePluginToUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,708]  - APPLIED - {"id"="migrate-firestore-to-uqi", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFirestorePluginToUqi"}
[2023-12-04 17:47:10,710]  - method[migrateFirestorePluginToUqi2] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,713]  - APPLIED - {"id"="migrate-firestore-to-uqi-2", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFirestorePluginToUqi2"}
[2023-12-04 17:47:10,715]  - method[migrateFirestorePaginationData] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,717]  - APPLIED - {"id"="migrate-firestore-pagination-data", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFirestorePaginationData"}
[2023-12-04 17:47:10,719]  - method[updateMongoMockdbEndpoint] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,724]  - APPLIED - {"id"="update-mongodb-mockdb-endpoint", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateMongoMockdbEndpoint"}
[2023-12-04 17:47:10,725]  - method[migrateFirestorePluginToUqi3] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,731]  - APPLIED - {"id"="migrate-firestore-to-uqi-3", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFirestorePluginToUqi3"}
[2023-12-04 17:47:10,733]  - method[createSystemThemes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,733]  - APPLIED - {"id"="create-system-themes", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createSystemThemes"}
[2023-12-04 17:47:10,735]  - method[addLimitFieldDataToMongoAggregateCommand] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,738]  - APPLIED - {"id"="add-limit-field-data-to-mongo-aggregate-cmd", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="addLimitFieldDataToMongoAggregateCommand"}
[2023-12-04 17:47:10,740]  - method[updateGitIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,774]  - APPLIED - {"id"="update-index-for-git", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateGitIndexes"}
[2023-12-04 17:47:10,776]  - method[updateMockdbEndpoint2] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,778]  - APPLIED - {"id"="update-mockdb-endpoint-2", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateMockdbEndpoint2"}
[2023-12-04 17:47:10,780]  - method[migrateFromRSASha1ToECDSASha2Protocol] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,781]  - APPLIED - {"id"="migrate-from-RSA-SHA1-to-ECDSA-SHA2-protocol-for-key-generation", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="migrateFromRSASha1ToECDSASha2Protocol"}
[2023-12-04 17:47:10,783]  - method[useAssetsCDNForPluginIcons] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,851]  - APPLIED - {"id"="use-assets-cdn-for-plugin-icons", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="useAssetsCDNForPluginIcons"}
[2023-12-04 17:47:10,853]  - method[updateNewActionActionCollectionAndUserDataIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,889]  - APPLIED - {"id"="update-index-for-newAction-actionCollection-userData", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateNewActionActionCollectionAndUserDataIndexes"}
[2023-12-04 17:47:10,891]  - method[markMSSQLCrudUnavailable] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,896]  - APPLIED - {"id"="mark-mssql-crud-unavailable", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="markMSSQLCrudUnavailable"}
[2023-12-04 17:47:10,898]  - method[updateNewActionActionCollectionIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,927]  - APPLIED - {"id"="update-index-for-newAction-actionCollection", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="updateNewActionActionCollectionIndexes"}
[2023-12-04 17:47:10,929]  - method[createSystemThemes2] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,929]  - APPLIED - {"id"="create-system-themes-v2", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="createSystemThemes2"}
[2023-12-04 17:47:10,930]  - method[setFirestoreSmartSubstitutionToFalseForOldCommands] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,933]  - APPLIED - {"id"="set-firestore-smart-substitution-to-false-for-old-cmds", "type"="execution", "author"="", "class"="DatabaseChangelog1", "method"="setFirestoreSmartSubstitutionToFalseForOldCommands"}
[2023-12-04 17:47:10,935]  - method[fixPluginTitleCasing] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,943]  - APPLIED - {"id"="fix-plugin-title-casing", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="fixPluginTitleCasing"}
[2023-12-04 17:47:10,945]  - method[deprecateArchivedAtForNewAction] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,947]  - APPLIED - {"id"="deprecate-archivedAt-in-action", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="deprecateArchivedAtForNewAction"}
[2023-12-04 17:47:10,949]  - method[updateActionFormDataPath] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,952]  - APPLIED - {"id"="update-form-data-for-uqi-mode", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateActionFormDataPath"}
[2023-12-04 17:47:10,955]  - method[updateIsConfiguredFlagForAllTheExistingDatasources] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,956]  - APPLIED - {"id"="add-isConfigured-flag-for-all-datasources", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateIsConfiguredFlagForAllTheExistingDatasources"}
[2023-12-04 17:47:10,958]  - method[setDefaultApplicationVersion] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,961]  - APPLIED - {"id"="set-application-version", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="setDefaultApplicationVersion"}
[2023-12-04 17:47:10,963]  - method[deleteOrphanPages] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,964]  - APPLIED - {"id"="delete-orphan-pages", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="deleteOrphanPages"}
[2023-12-04 17:47:10,966]  - method[addIndexesForGit] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,991]  - APPLIED - {"id"="update-git-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addIndexesForGit"}
[2023-12-04 17:47:10,993]  - method[updateOrganizationSlugs] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:10,996]  - APPLIED - {"id"="update-organization-slugs", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateOrganizationSlugs"}
[2023-12-04 17:47:10,998]  - method[copyOrganizationToWorkspaces] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,005]  - APPLIED - {"id"="copy-organization-to-workspaces", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="copyOrganizationToWorkspaces"}
[2023-12-04 17:47:11,007]  - method[addWorkspaceIndexes] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,019]  - APPLIED - {"id"="add-workspace-indexes", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addWorkspaceIndexes"}
[2023-12-04 17:47:11,021]  - method[updateSequenceNamesFromOrganizationToWorkspace] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,026]  - APPLIED - {"id"="update-sequence-names-from-organization-to-workspace", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateSequenceNamesFromOrganizationToWorkspace"}
[2023-12-04 17:47:11,029]  - method[addDefaultTenant] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,042]  - APPLIED - {"id"="add-default-tenant", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addDefaultTenant"}
[2023-12-04 17:47:11,044]  - method[addTenantToWorkspaces] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,051]  - APPLIED - {"id"="add-tenant-to-all-workspaces", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addTenantToWorkspaces"}
[2023-12-04 17:47:11,054]  - method[addTenantToUsersAndFlushRedis] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, org.springframework.data.redis.core.ReactiveRedisOperations]
[2023-12-04 17:47:11,061]  - APPLIED - {"id"="add-tenant-to-all-users-and-flush-redis", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addTenantToUsersAndFlushRedis"}
[2023-12-04 17:47:11,064]  - method[migrateOrganizationIdToWorkspaceIdInDomainObjects] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, org.springframework.data.redis.core.ReactiveRedisOperations]
No datasource to migrate.
No actionCollection to migrate.
No application to migrate.
No newAction to migrate.
No theme to migrate.
No userData to migrate.
No workspace to migrate.
No user to migrate.
[2023-12-04 17:47:11,075]  - APPLIED - {"id"="migrate-organizationId-to-workspaceId-in-domain-objects", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="migrateOrganizationIdToWorkspaceIdInDomainObjects"}
[2023-12-04 17:47:11,077]  - method[organizationToWorkspaceIndexesRecreate] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,104]  - APPLIED - {"id"="organization-to-workspace-indexes-recreate", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="organizationToWorkspaceIndexesRecreate"}
[2023-12-04 17:47:11,106]  - method[migratePermissionsInUser] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,112]  - APPLIED - {"id"="migrate-permission-in-user", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="migratePermissionsInUser"}
[2023-12-04 17:47:11,114]  - method[migratePermissionsInWorkspace] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,123]  - APPLIED - {"id"="migrate-permission-in-workspace", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="migratePermissionsInWorkspace"}
[2023-12-04 17:47:11,125]  - method[migrateOrganizationIdToWorkspaceIdInNewActionDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, org.springframework.data.redis.core.ReactiveRedisOperations]
No newAction to migrate.
[2023-12-04 17:47:11,126]  - APPLIED - {"id"="migrate-organizationId-to-workspaceId-in-newaction-datasource", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="migrateOrganizationIdToWorkspaceIdInNewActionDatasource"}
[2023-12-04 17:47:11,128]  - method[migrateGoogleSheetsToUqi] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,133]  - APPLIED - {"id"="migrate-google-sheets-to-uqi", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="migrateGoogleSheetsToUqi"}
[2023-12-04 17:47:11,135]  - method[clearRedisCache2] with arguments: [org.springframework.data.redis.core.ReactiveRedisOperations]
[2023-12-04 17:47:11,136]  - APPLIED - {"id"="flush-spring-redis-keys-2a", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="clearRedisCache2"}
[2023-12-04 17:47:11,138]  - method[fixDeletedThemesWhenGitBranchDeleted] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,145]  - APPLIED - {"id"="fix-deleted-themes-when-git-branch-deleted", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="fixDeletedThemesWhenGitBranchDeleted"}
[2023-12-04 17:47:11,147]  - method[addAnonymousUser] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,168]  - APPLIED - {"id"="add-anonymousUser", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addAnonymousUser"}
[2023-12-04 17:47:11,173]  - method[addDefaultPermissionGroups] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.services.WorkspaceService, com.appsmith.server.solutions.PolicySolutionImpl, jdk.proxy2.$Proxy138]
[2023-12-04 17:47:11,180]  - APPLIED - {"id"="add-default-permission-groups", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addDefaultPermissionGroups"}
[2023-12-04 17:47:11,183]  - method[markPublicApps] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,185]  - APPLIED - {"id"="mark-public-apps", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="markPublicApps"}
[2023-12-04 17:47:11,187]  - method[markWorkspacesForInheritance] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,190]  - APPLIED - {"id"="mark-workspaces-for-inheritance", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="markWorkspacesForInheritance"}
[2023-12-04 17:47:11,192]  - method[inheritPoliciesToEveryChildObject] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.acl.PolicyGenerator]
[2023-12-04 17:47:11,194]  - APPLIED - {"id"="inherit-policies-to-every-child-object", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="inheritPoliciesToEveryChildObject"}
[2023-12-04 17:47:11,195]  - method[makeApplicationsPublic] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolutionImpl, com.appsmith.server.acl.PolicyGenerator, jdk.proxy2.$Proxy144]
[2023-12-04 17:47:11,199]  - APPLIED - {"id"="make-applications-public", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="makeApplicationsPublic"}
[2023-12-04 17:47:11,200]  - method[addInstanceConfigurationPlaceHolder] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,230]  - APPLIED - {"id"="add-instance-config-object", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addInstanceConfigurationPlaceHolder"}
[2023-12-04 17:47:11,234]  - method[addAnonymousUserPermissionGroup] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,244]  - APPLIED - {"id"="add-anonymous-user-permission-group", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addAnonymousUserPermissionGroup"}
[2023-12-04 17:47:11,247]  - method[createSystemThemes3] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,365]  - APPLIED - {"id"="create-system-themes-v3", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="createSystemThemes3"}
[2023-12-04 17:47:11,368]  - method[updateBadThemeState] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.acl.PolicyGenerator, com.appsmith.server.repositories.CacheableRepositoryHelper]
[2023-12-04 17:47:11,371]  - APPLIED - {"id"="update-bad-theme-state", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateBadThemeState"}
[2023-12-04 17:47:11,374]  - method[migratePublicAppsSinglePg] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolutionImpl, com.appsmith.server.acl.PolicyGenerator, com.appsmith.server.repositories.CacheableRepositoryHelper]
[2023-12-04 17:47:11,394]  - Cache entry evicted for key permissionGroupsForUser:anonymousUser656e109f7a9241557a474d78
[2023-12-04 17:47:11,405]  - APPLIED - {"id"="migrate-public-apps-single-pg", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="migratePublicAppsSinglePg"}
[2023-12-04 17:47:11,408]  - method[addTenantAdminPermissionsToInstanceAdmin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolutionImpl]
[2023-12-04 17:47:11,424]  - APPLIED - {"id"="add-tenant-admin-permissions-instance-admin", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addTenantAdminPermissionsToInstanceAdmin"}
[2023-12-04 17:47:11,426]  - method[addGraphQLPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,431]  - APPLIED - {"id"="add-graphql-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addGraphQLPlugin"}
[2023-12-04 17:47:11,433]  - method[reInstallGraphQLPluginToWorkspaces] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,439]  - APPLIED - {"id"="install-graphql-plugin-to-remaining-workspaces", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="reInstallGraphQLPluginToWorkspaces"}
[2023-12-04 17:47:11,442]  - method[addIndicesRecommendedByMongoCloud] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,471]  - APPLIED - {"id"="indices-recommended-by-mongodb-cloud", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addIndicesRecommendedByMongoCloud"}
[2023-12-04 17:47:11,473]  - method[deleteRapidApiPluginRelatedItems] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,483]  - APPLIED - {"id"="delete-rapid-api-plugin-related-items", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="deleteRapidApiPluginRelatedItems"}
[2023-12-04 17:47:11,485]  - method[addUniqueIndexOnUidString] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,497]  - APPLIED - {"id"="add-unique-index-for-uidstring", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addUniqueIndexOnUidString"}
[2023-12-04 17:47:11,499]  - method[modifyReadPermissionGroupToReadPermissionGroupMembers] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolutionImpl]
[2023-12-04 17:47:11,502]  - APPLIED - {"id"="change-readPermissionGroup-to-readPermissionGroupMembers", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="modifyReadPermissionGroupToReadPermissionGroupMembers"}
[2023-12-04 17:47:11,504]  - method[changeSSLModeFromPreferredToDefaultForMySQLPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,508]  - APPLIED - {"id"="remove-preferred-ssl-mode-from-mysql", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="changeSSLModeFromPreferredToDefaultForMySQLPlugin"}
[2023-12-04 17:47:11,510]  - method[deletePermissionsInPermissionGroups] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,512]  - APPLIED - {"id"="delete-permissions-in-permissionGroups", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="deletePermissionsInPermissionGroups"}
[2023-12-04 17:47:11,514]  - method[removeUsagePulsesForAppsmithCloud] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.configurations.CommonConfig$$SpringCGLIB$$0]
[2023-12-04 17:47:11,514]  - APPLIED - {"id"="remove-usage-pulses-for-appsmith-cloud", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="removeUsagePulsesForAppsmithCloud"}
[2023-12-04 17:47:11,516]  - method[addSslModeSettingsForExistingMssqlDatasource] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,520]  - APPLIED - {"id"="add-ssl-mode-settings-for-existing-mssql-datasources", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addSslModeSettingsForExistingMssqlDatasource"}
[2023-12-04 17:47:11,522]  - method[addOraclePlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,526]  - APPLIED - {"id"="add-oracle-plugin", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addOraclePlugin"}
[2023-12-04 17:47:11,528]  - method[updateOraclePluginName] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,532]  - APPLIED - {"id"="update-oracle-plugin-name", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateOraclePluginName"}
[2023-12-04 17:47:11,536]  - method[updateSuperUsers] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.repositories.CacheableRepositoryHelper, com.appsmith.server.solutions.PolicySolution, com.appsmith.server.acl.PolicyGenerator]
[2023-12-04 17:47:11,547]  - APPLIED - {"id"="update-super-users", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="updateSuperUsers"}
[2023-12-04 17:47:11,550]  - method[addPermissionGroupIndex] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,665]  - APPLIED - {"id"="create-indices-on-permissions-for-performance", "type"="execution", "author"="", "class"="DatabaseChangelog2", "method"="addPermissionGroupIndex"}
[2023-12-04 17:47:11,668]  - method[com.appsmith.server.migrations.db.ce.Migration003AddInstanceNameToTenantConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,669]  - method[addInstanceNameEnvVarToTenantConfiguration] with arguments: []
[2023-12-04 17:47:11,679]  - APPLIED - {"id"="add-instance-name-env-variable-tenant-configuration", "type"="execution", "author"="default_author", "class"="Migration003AddInstanceNameToTenantConfiguration", "method"="addInstanceNameEnvVarToTenantConfiguration"}
[2023-12-04 17:47:11,682]  - method[com.appsmith.server.migrations.db.ce.Migration004PermissionGroupDefaultWorkspaceIdMigration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,682]  - method[defaultWorkspaceIdMigration] with arguments: []
No permissionGroup data to migrate.
[2023-12-04 17:47:11,684]  - APPLIED - {"id"="migrate-default-workspace-id-to-default-domain-id", "type"="execution", "author"="default_author", "class"="Migration004PermissionGroupDefaultWorkspaceIdMigration", "method"="defaultWorkspaceIdMigration"}
[2023-12-04 17:47:11,686]  - method[com.appsmith.server.migrations.db.ce.Migration005CreateIndexForApplicationSnapshotMigration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,686]  - method[addIndexOnApplicationIdAndChunkOrder] with arguments: []
[2023-12-04 17:47:11,702]  - APPLIED - {"id"="create-index-for-application-snapshot-collection", "type"="execution", "author"="default_author", "class"="Migration005CreateIndexForApplicationSnapshotMigration", "method"="addIndexOnApplicationIdAndChunkOrder"}
[2023-12-04 17:47:11,704]  - method[com.appsmith.server.migrations.db.ce.Migration006ResetOnPageLoadEdgesInLayouts] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,704]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:11,709]  - APPLIED - {"id"="reset-on-page-load-edges-in-layouts", "type"="execution", "author"="default_author", "class"="Migration006ResetOnPageLoadEdgesInLayouts", "method"="executeMigration"}
[2023-12-04 17:47:11,712]  - method[com.appsmith.server.migrations.db.ce.Migration007OptOutUnsupportedPluginsForAirGap] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,712]  - method[optOutUnsupportedPluginsForAirGapInstance] with arguments: []
[2023-12-04 17:47:11,734]  - APPLIED - {"id"="opt-out-unsupported-plugins-airgap-instance", "type"="execution", "author"="default_author", "class"="Migration007OptOutUnsupportedPluginsForAirGap", "method"="optOutUnsupportedPluginsForAirGapInstance"}
[2023-12-04 17:47:11,736]  - method[com.appsmith.server.migrations.db.ce.Migration008SupportNonHostedPluginsForAirgap] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,736]  - method[supportNonHostedPluginsForAirgap] with arguments: []
[2023-12-04 17:47:11,751]  - APPLIED - {"id"="support-non-self-hosted-plugins-for-airgap", "type"="execution", "author"="default_author", "class"="Migration008SupportNonHostedPluginsForAirgap", "method"="supportNonHostedPluginsForAirgap"}
[2023-12-04 17:47:11,753]  - method[com.appsmith.server.migrations.db.ce.Migration009UpdateOracleLogoToSVG] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,754]  - method[updateOracleLogoToSVG] with arguments: []
[2023-12-04 17:47:11,758]  - APPLIED - {"id"="update-oracle-logo-to-svg", "type"="execution", "author"="default_author", "class"="Migration009UpdateOracleLogoToSVG", "method"="updateOracleLogoToSVG"}
[2023-12-04 17:47:11,760]  - method[com.appsmith.server.migrations.db.ce.Migration010UpdatePluginDocsLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,760]  - method[updatePluginDocumentationLinks] with arguments: []
[2023-12-04 17:47:11,798]  - APPLIED - {"id"="update-plugins-docs-link", "type"="execution", "author"="default_author", "class"="Migration010UpdatePluginDocsLink", "method"="updatePluginDocumentationLinks"}
[2023-12-04 17:47:11,800]  - method[com.appsmith.server.migrations.db.ce.Migration011CreateIndexDefaultDomainIdDefaultDomainTypeDropIndexDefaultWorkspaceId] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,800]  - method[createNewIndexDefaultDomainIdDefaultDomainTypeAndDropOldIndexDefaultWorkspaceId] with arguments: []
[2023-12-04 17:47:11,916]  - APPLIED - {"id"="create-index-default-domain-id-default-domain-type", "type"="execution", "author"="default_author", "class"="Migration011CreateIndexDefaultDomainIdDefaultDomainTypeDropIndexDefaultWorkspaceId", "method"="createNewIndexDefaultDomainIdDefaultDomainTypeAndDropOldIndexDefaultWorkspaceId"}
[2023-12-04 17:47:11,918]  - method[com.appsmith.server.migrations.db.ce.Migration012RemoveStructureFromWithinDatasource] with arguments: [org.springframework.data.mongodb.core.MongoOperations, org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,918]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:11,933]  - APPLIED - {"id"="remove-structure-from-within-datasource-modified", "type"="execution", "author"="default_author", "class"="Migration012RemoveStructureFromWithinDatasource", "method"="executeMigration"}
[2023-12-04 17:47:11,935]  - method[com.appsmith.server.migrations.db.ce.Migration013AddEmailBodyTypeToSMTPPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,935]  - method[addSmtpEmailBodyType] with arguments: []
[2023-12-04 17:47:11,942]  - APPLIED - {"id"="add-smtp-email-body-type", "type"="execution", "author"="default_author", "class"="Migration013AddEmailBodyTypeToSMTPPlugin", "method"="addSmtpEmailBodyType"}
[2023-12-04 17:47:11,943]  - method[com.appsmith.server.migrations.db.ce.Migration014AddIndexToDatasourceStorage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,944]  - method[addingIndexToDatasourceStorage] with arguments: []
[2023-12-04 17:47:11,954]  - APPLIED - {"id"="index-for-datasource-storage", "type"="execution", "author"="default_author", "class"="Migration014AddIndexToDatasourceStorage", "method"="addingIndexToDatasourceStorage"}
[2023-12-04 17:47:11,956]  - method[com.appsmith.server.migrations.db.ce.Migration015AddPluginTypeIndexToNewActionCollection] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,956]  - method[addingIndexToNewAction] with arguments: []
[2023-12-04 17:47:11,962]  - APPLIED - {"id"="app-id-plugin-type-index-for-new-action", "type"="execution", "author"="default_author", "class"="Migration015AddPluginTypeIndexToNewActionCollection", "method"="addingIndexToNewAction"}
[2023-12-04 17:47:11,964]  - method[com.appsmith.server.migrations.db.ce.Migration016RenameIndexesWithLongNames] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:11,964]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:12,110]  - APPLIED - {"id"="rename-indexes-with-long-names", "type"="execution", "author"="default_author", "class"="Migration016RenameIndexesWithLongNames", "method"="executeMigration"}
[2023-12-04 17:47:12,112]  - method[com.appsmith.server.migrations.db.ce.Migration017UnsetEncryptionVersion2Fields] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,113]  - method[executeMigration] with arguments: [org.springframework.data.mongodb.core.MongoOperations]
[2023-12-04 17:47:12,116]  - APPLIED - {"id"="unset-not-encrypted-encryption-version-2-fields", "type"="execution", "author"="default_author", "class"="Migration017UnsetEncryptionVersion2Fields", "method"="executeMigration"}
[2023-12-04 17:47:12,117]  - method[com.appsmith.server.migrations.db.ce.Migration018UpdateOraclePluginDocumentationLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,118]  - method[updateOracleDocumentationLink] with arguments: []
[2023-12-04 17:47:12,122]  - APPLIED - {"id"="update-oracle-doc-link", "type"="execution", "author"="default_author", "class"="Migration018UpdateOraclePluginDocumentationLink", "method"="updateOracleDocumentationLink"}
[2023-12-04 17:47:12,123]  - method[com.appsmith.server.migrations.db.ce.Migration019RemoveNullEnvIdDatasourceStructureDocuments] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,123]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:12,129]  - APPLIED - {"id"="delete-null-envId-key-document", "type"="execution", "author"="default_author", "class"="Migration019RemoveNullEnvIdDatasourceStructureDocuments", "method"="executeMigration"}
[2023-12-04 17:47:12,132]  - method[com.appsmith.server.migrations.db.ce.Migration021MoveGoogleMapsKeyToTenantConfiguration] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.configurations.CommonConfig]
[2023-12-04 17:47:12,132]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:12,132]  - APPLIED - {"id"="move-google-maps-key-to-tenant-configuration", "type"="execution", "author"="default_author", "class"="Migration021MoveGoogleMapsKeyToTenantConfiguration", "method"="executeMigration"}
[2023-12-04 17:47:12,134]  - method[com.appsmith.server.migrations.db.ce.Migration022AddConnectionMethodDefaultValueToAllMySQLDatasources] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,134]  - method[updateConnectionMethodDefaultValueForMySQL] with arguments: []
[2023-12-04 17:47:12,137]  - APPLIED - {"id"="add-connection-method-default-value-for-mysql", "type"="execution", "author"="default_author", "class"="Migration022AddConnectionMethodDefaultValueToAllMySQLDatasources", "method"="updateConnectionMethodDefaultValueForMySQL"}
[2023-12-04 17:47:12,138]  - method[com.appsmith.server.migrations.db.ce.Migration023UpdateJSPluginIcon] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,139]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:12,143]  - APPLIED - {"id"="update-js-plugin-icon", "type"="execution", "author"="default_author", "class"="Migration023UpdateJSPluginIcon", "method"="executeMigration"}
[2023-12-04 17:47:12,145]  - method[com.appsmith.server.migrations.db.ce.Migration024EnableGenerateCRUDPageToggleForMssqlPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,145]  - method[enableGenerateCRUDPageToggle] with arguments: []
[2023-12-04 17:47:12,149]  - APPLIED - {"id"="enable-generate-crud-page-for-mssql", "type"="execution", "author"="default_author", "class"="Migration024EnableGenerateCRUDPageToggleForMssqlPlugin", "method"="enableGenerateCRUDPageToggle"}
[2023-12-04 17:47:12,150]  - method[com.appsmith.server.migrations.db.ce.Migration025AddIndexDeletedInApplication] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,150]  - method[createIndexInApplicationCollection] with arguments: []
[2023-12-04 17:47:12,158]  - APPLIED - {"id"="add-index-application-deleted", "type"="execution", "author"="default_author", "class"="Migration025AddIndexDeletedInApplication", "method"="createIndexInApplicationCollection"}
[2023-12-04 17:47:12,160]  - method[com.appsmith.server.migrations.db.ce.Migration025RemoveUnassignPermissionFromUnnecessaryRoles] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,160]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:12,161]  - Check if performant query can be used.
[2023-12-04 17:47:12,163]  - Using performant query.
[2023-12-04 17:47:12,164]  - APPLIED - {"id"="remove-unassign-permission-from-workspace-dev-viewer-roles", "type"="execution", "author"="default_author", "class"="Migration025RemoveUnassignPermissionFromUnnecessaryRoles", "method"="executeMigration"}
[2023-12-04 17:47:12,165]  - method[com.appsmith.server.migrations.db.ce.Migration026AddIndexTenantAndDeletedInWorkspace] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,165]  - method[addIndexInWorkspaceCollection] with arguments: []
[2023-12-04 17:47:12,173]  - APPLIED - {"id"="add-index-workspace-tenant-deleted", "type"="execution", "author"="default_author", "class"="Migration026AddIndexTenantAndDeletedInWorkspace", "method"="addIndexInWorkspaceCollection"}
[2023-12-04 17:47:12,175]  - method[com.appsmith.server.migrations.db.ce.Migration027AddIndexDatasourceIdAndDeletedInAction] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,175]  - method[addIndexInNewActionCollection] with arguments: []
[2023-12-04 17:47:12,187]  - APPLIED - {"id"="new-action-compound-index-datasource-id", "type"="execution", "author"="default_author", "class"="Migration027AddIndexDatasourceIdAndDeletedInAction", "method"="addIndexInNewActionCollection"}
[2023-12-04 17:47:12,189]  - method[com.appsmith.server.migrations.db.ce.Migration028TagUserManagementRolesWithoutDefaultDomainTypeAndId] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,189]  - method[tagUserManagementRolesWithoutDefaultDomainTypeAndId] with arguments: []
[2023-12-04 17:47:12,194]  - APPLIED - {"id"="tag-user-management-roles-without-default-domain-type-and-id", "type"="execution", "author"="default_author", "class"="Migration028TagUserManagementRolesWithoutDefaultDomainTypeAndId", "method"="tagUserManagementRolesWithoutDefaultDomainTypeAndId"}
[2023-12-04 17:47:12,195]  - method[com.appsmith.server.migrations.db.ce.Migration029PopulateDefaultDomainIdInUserManagementRoles] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,196]  - method[populateDefaultDomainIdInUserManagementRoles] with arguments: []
[2023-12-04 17:47:12,203]  - APPLIED - {"id"="populate-default-domain-id-in-user-management-roles", "type"="execution", "author"="default_author", "class"="Migration029PopulateDefaultDomainIdInUserManagementRoles", "method"="populateDefaultDomainIdInUserManagementRoles"}
[2023-12-04 17:47:12,205]  - method[com.appsmith.server.migrations.db.ce.Migration030TagUsersWithNoUserManagementRoles] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,205]  - method[tagUsersWithNoUserManagementRoles] with arguments: []
[2023-12-04 17:47:12,209]  - APPLIED - {"id"="tag-users-with-no-user-management-roles", "type"="execution", "author"="default_author", "class"="Migration030TagUsersWithNoUserManagementRoles", "method"="tagUsersWithNoUserManagementRoles"}
[2023-12-04 17:47:12,211]  - method[com.appsmith.server.migrations.db.ce.Migration031CreateUserManagementRolesForUsersTaggedIn030] with arguments: [org.springframework.data.mongodb.core.MongoTemplate, com.appsmith.server.solutions.PolicySolution]
[2023-12-04 17:47:12,211]  - method[createUserManagementRolesForUsersTaggedInMigration030] with arguments: []
[2023-12-04 17:47:12,211]  - Check if performant query can be used.
[2023-12-04 17:47:12,212]  - Using performant query.
[2023-12-04 17:47:12,213]  - APPLIED - {"id"="create-user-management-roles-for-users-tagged-in-migration-030", "type"="execution", "author"="default_author", "class"="Migration031CreateUserManagementRolesForUsersTaggedIn030", "method"="createUserManagementRolesForUsersTaggedInMigration030"}
[2023-12-04 17:47:12,215]  - method[com.appsmith.server.migrations.db.ce.Migration032AddingXmlParserToApplicationLibraries] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,215]  - method[addXmlParserEntryToEachApplication] with arguments: []
[2023-12-04 17:47:12,221]  - Going to add Xml Parser uid in all application DTOs
[2023-12-04 17:47:12,225]  - APPLIED - {"id"="add-xml-parser-to-application-jslibs", "type"="execution", "author"="default_author", "class"="Migration032AddingXmlParserToApplicationLibraries", "method"="addXmlParserEntryToEachApplication"}
[2023-12-04 17:47:12,226]  - method[com.appsmith.server.migrations.db.ce.Migration033AddOpenAIPlugin] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,226]  - method[addPluginToDbAndWorkspace] with arguments: []
[2023-12-04 17:47:12,230]  - APPLIED - {"id"="add-open-ai-plugin", "type"="execution", "author"="default_author", "class"="Migration033AddOpenAIPlugin", "method"="addPluginToDbAndWorkspace"}
[2023-12-04 17:47:12,232]  - method[com.appsmith.server.migrations.db.ce.Migration034ChangeOpenAIIntegrationDocumentationLink] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,232]  - method[changeDocumentationLink] with arguments: []
[2023-12-04 17:47:12,236]  - APPLIED - {"id"="change-open-ai-integration-documentation-link", "type"="execution", "author"="default_author", "class"="Migration034ChangeOpenAIIntegrationDocumentationLink", "method"="changeDocumentationLink"}
[2023-12-04 17:47:12,237]  - method[com.appsmith.server.migrations.db.ce.Migration020TransferToDatasourceStorage] with arguments: [org.springframework.data.mongodb.core.MongoTemplate]
[2023-12-04 17:47:12,238]  - method[executeMigration] with arguments: []
[2023-12-04 17:47:12,238]  - Check if performant query can be used.
[2023-12-04 17:47:12,240]  - Using performant query.
[2023-12-04 17:47:12,242]  - APPLIED - {"id"="migrate-configurations-to-data-storage-v2", "type"="execution", "author"="default_author", "class"="Migration020TransferToDatasourceStorage", "method"="executeMigration"}
[2023-12-04 17:47:12,244]  - Mongock releasing the lock
[2023-12-04 17:47:12,244]  - Mongock releasing the lock
[2023-12-04 17:47:12,245]  - Mongock released the lock
[2023-12-04 17:47:12,245]  - Mongock has finished
[2023-12-04 17:47:12,885]  - Exposing 2 endpoint(s) beneath base path '/actuator'
[2023-12-04 17:47:13,137]  - Netty started on port 8080
[2023-12-04 17:47:13,152]  - Started ServerApplication in 13.058 seconds (process running for 13.875)
[2023-12-04 17:47:13,161]  - Performing RTS health check of this instance...
[2023-12-04 17:47:13,173]  - In memory cache miss for anonymous user permission groups. Fetching from DB and adding it to in memory storage.
[2023-12-04 17:47:13,227]  - Fetched and set conenncted mongo db version as: 5.0.22
[2023-12-04 17:47:13,260]  - Triggering registration of this instance...
[2023-12-04 17:47:13,549]  - Instance registration failed with error: 
PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
[2023-12-04 17:47:13,555]  - [18067ab3, L:/172.23.0.4:45462 - R:cs.appsmith.com/3.143.120.134:443] The connection observed an error
javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:13,573]  - [18067ab3, L:/172.23.0.4:45462 ! R:cs.appsmith.com/3.143.120.134:443] The connection observed an error
io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:499)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	... 17 common frames omitted
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:13,634]  - RTS health check succeeded

 █████╗ ██████╗ ██████╗ ███████╗███╗   ███╗██╗████████╗██╗  ██╗    ██╗███████╗    ██████╗ ██╗   ██╗███╗   ██╗███╗   ██╗██╗███╗   ██╗ ██████╗ ██╗
██╔══██╗██╔══██╗██╔══██╗██╔════╝████╗ ████║██║╚══██╔══╝██║  ██║    ██║██╔════╝    ██╔══██╗██║   ██║████╗  ██║████╗  ██║██║████╗  ██║██╔════╝ ██║
███████║██████╔╝██████╔╝███████╗██╔████╔██║██║   ██║   ███████║    ██║███████╗    ██████╔╝██║   ██║██╔██╗ ██║██╔██╗ ██║██║██╔██╗ ██║██║  ███╗██║
██╔══██║██╔═══╝ ██╔═══╝ ╚════██║██║╚██╔╝██║██║   ██║   ██╔══██║    ██║╚════██║    ██╔══██╗██║   ██║██║╚██╗██║██║╚██╗██║██║██║╚██╗██║██║   ██║╚═╝
██║  ██║██║     ██║     ███████║██║ ╚═╝ ██║██║   ██║   ██║  ██║    ██║███████║    ██║  ██║╚██████╔╝██║ ╚████║██║ ╚████║██║██║ ╚████║╚██████╔╝██╗
╚═╝  ╚═╝╚═╝     ╚═╝     ╚══════╝╚═╝     ╚═╝╚═╝   ╚═╝   ╚═╝  ╚═╝    ╚═╝╚══════╝    ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═══╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝

Please open http://localhost:<port> in your browser to experience Appsmith!

[2023-12-04 17:47:13,639]  - License verification completed with status: valid
[2023-12-04 17:47:13,651]  - Cache miss for key tenantNewFeatures:656e109f7a9241557a474d78
[2023-12-04 17:47:13,681]  - Received error from CS while fetching features: Received error from cloud services PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
com.appsmith.server.exceptions.AppsmithException: Received error from cloud services PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at com.appsmith.server.services.ce.CacheableFeatureFlagHelperCEImpl.lambda$getRemoteFeaturesForTenant$14(CacheableFeatureFlagHelperCEImpl.java:251)
	at reactor.core.publisher.Mono.lambda$onErrorMap$27(Mono.java:3769)
	at reactor.core.publisher.Mono.lambda$onErrorResume$29(Mono.java:3859)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onError(FluxHide.java:142)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onError(FluxHide.java:142)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onError(FluxDoFinally.java:119)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2210)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onError(FluxHide.java:142)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:56)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerError(FluxConcatMapNoPrefetch.java:297)
	at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onError(FluxConcatMap.java:875)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:206)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onNext(MDCConfig.java:53)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:603)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:212)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:466)
	at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:148)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
	at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
	at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
	at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
	at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
	at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
	at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
	at reactor.netty.tcp.SslProvider$SslReadHandler.userEventTriggered(SslProvider.java:859)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:400)
	at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:376)
	at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:368)
	at io.netty.handler.ssl.SslHandler.handleUnwrapThrowable(SslHandler.java:1270)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1251)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2023-12-04 17:47:13,682]  - Cache entry added for key tenantNewFeatures:656e109f7a9241557a474d78
[2023-12-04 17:47:13,690]  - [053ade45, L:/172.23.0.4:45470 - R:cs.appsmith.com/3.143.120.134:443] The connection observed an error
javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:13,694]  - [053ade45, L:/172.23.0.4:45470 ! R:cs.appsmith.com/3.143.120.134:443] The connection observed an error
io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:499)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	... 17 common frames omitted
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:23,154]  - Fetching features for default tenant
[2023-12-04 17:47:28,373]  - Cancelled mongock lock daemon
[2023-12-04 17:47:43,210]  - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: org.springframework.web.reactive.function.client.WebClientRequestException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET null [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.innerError(FluxConcatMapNoPrefetch.java:297)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onError(FluxConcatMap.java:875)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.Operators.error(Operators.java:198)
		at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4495)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:206)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onNext(MDCConfig.java:53)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:603)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1717)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
		at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onError(MDCConfig.java:58)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:212)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:466)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:148)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at reactor.netty.tcp.SslProvider$SslReadHandler.userEventTriggered(SslProvider.java:859)
		at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:400)
		at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:376)
		at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:368)
		at io.netty.handler.ssl.SslHandler.handleUnwrapThrowable(SslHandler.java:1270)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1251)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:43,215]  - [1155a89c, L:/172.23.0.4:50134 - R:cs.appsmith.com/3.143.120.134:443] The connection observed an error
javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:43,221]  - [1155a89c, L:/172.23.0.4:50134 ! R:cs.appsmith.com/3.143.120.134:443] The connection observed an error
io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:499)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:378)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:321)
	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:316)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1357)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.onConsumeCertificate(CertificateMessage.java:1232)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.consume(CertificateMessage.java:1175)
	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:396)
	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:480)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1277)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:1264)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.base/sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:1209)
	at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1559)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1405)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1246)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1295)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468)
	... 17 common frames omitted
Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:285)
	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:144)
	at java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)
	... 31 common frames omitted
Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:148)
	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:129)
	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
	... 36 common frames omitted
[2023-12-04 17:47:46,323]  - Commencing graceful shutdown. Waiting for active requests to complete
[2023-12-04 17:47:46,325]  - Graceful shutdown complete
[2023-12-04 17:47:46,343]  - Operator called default onErrorDropped
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.util.concurrent.CancellationException: Disconnected
Caused by: java.util.concurrent.CancellationException: Disconnected
	at reactor.core.publisher.FluxPublish$PublishSubscriber.disconnectAction(FluxPublish.java:327)
	at reactor.core.publisher.FluxPublish$PublishSubscriber.dispose(FluxPublish.java:318)
	at org.springframework.data.redis.connection.lettuce.LettuceReactiveSubscription$State.terminate(LettuceReactiveSubscription.java:271)
	at org.springframework.data.redis.connection.lettuce.LettuceReactiveSubscription.lambda$cancel$8(LettuceReactiveSubscription.java:149)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:240)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:209)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:238)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:203)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2205)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2205)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:250)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onComplete(MonoFlatMap.java:324)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at com.appsmith.server.configurations.MDCConfig$MdcContextLifter.onComplete(MDCConfig.java:63)
	at io.lettuce.core.RedisPublisher$ImmediateSubscriber.onComplete(RedisPublisher.java:900)
	at io.lettuce.core.RedisPublisher$State.onAllDataRead(RedisPublisher.java:702)
	at io.lettuce.core.RedisPublisher$State$3.read(RedisPublisher.java:612)
	at io.lettuce.core.RedisPublisher$State$3.onDataAvailable(RedisPublisher.java:569)
	at io.lettuce.core.RedisPublisher$RedisSubscription.onDataAvailable(RedisPublisher.java:326)
	at io.lettuce.core.RedisPublisher$RedisSubscription.onAllDataRead(RedisPublisher.java:341)
	at io.lettuce.core.RedisPublisher$SubscriptionCommand.doOnComplete(RedisPublisher.java:782)
	at io.lettuce.core.protocol.CommandWrapper.complete(CommandWrapper.java:65)
	at io.lettuce.core.protocol.CommandWrapper.complete(CommandWrapper.java:63)
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:747)
	at io.lettuce.core.pubsub.PubSubCommandHandler.complete(PubSubCommandHandler.java:167)
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:682)
	at io.lettuce.core.pubsub.PubSubCommandHandler.decode(PubSubCommandHandler.java:112)
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:599)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:840)
